// mixins
@mixin load-in {
	animation: load-in 1s cubic-bezier(0, 0.54, 0.97, 0.64) forwards;
}

@mixin load-in-left {
	animation: load-in-left 1s ease-out forwards;
}

@mixin load-in-right {
	animation: load-in-right 1s ease-out forwards;
}

@mixin load-in-up {
	animation: load-in-up 1s ease-out forwards;
}

@mixin load-in-down {
	animation: load-in-down 1s ease-out forwards;
}

// staggered fade in based on number of elements
@mixin stagger-fade-up($num, $delay: 0.25s) {
	@for $i from 1 through $num {
		&:nth-child(#{$i}).fade-up {
			transition: transform 0.5s ease $delay * $i,
				opacity 1s ease $delay * $i;
		}
	}
}

@mixin stagger-fade-up-reverse($num, $delay: 0.25s) {
	@for $i from 1 through $num {
		&:nth-last-child(#{$i}).fade-up {
			transition: transform 0.5s ease $delay * $i,
				opacity 1s ease $delay * $i;
		}
	}
}

@mixin stagger-fade-down($num, $delay: 0.25s) {
	@for $i from 1 through $num {
		&:nth-child(#{$i}).fade-down {
			transition: transform 0.5s ease $delay * $i,
				opacity 1s ease $delay * $i;
		}
	}
}
