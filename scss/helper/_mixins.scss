

/*================================================
			Breakpoints
==================================================*/

@mixin bp($screen-width) {
	@if $screen-width == sm {
		@media (max-width: ($sm/16)*1em) { @content ; }
	}
	@if $screen-width == mp {
		@media (max-width: ($mp/16)*1em) { @content ; }
	} 
	@else if $screen-width == ml {
		@media (max-width: ($ml/16)*1em) { @content ; }
	} 
	@else if $screen-width == tp {
		@media (max-width: ($tp/16)*1em) { @content ; }
	} 
	@else if $screen-width == tl {
		@media (max-width: ($tl/16)*1em) { @content ; }
	} 
	@else if $screen-width == dk {
		@media (min-width: ($dk/16)*1em) { @content ; }
	} 
	@else if $screen-width == lg {
		@media (min-width: ($lg/16)*1em) { @content ; }
	} 
}

/*================================================
			Clearfix
==================================================*/
@mixin clearfix {
  *zoom: 1;

  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}


/*================================================
			Responsive Typography
==================================================*/
// Responsive Text ---- sets the range limit for responsive font-size.
// Body: Allows any em based font size to be responsive
// element: allows precise control if you use px or rem
// em units get blown up if responsive text mixin is set at body or root.
@mixin responsive-text($min-font-size, $max-font-size, $min-vw: $min-viewport, $max-vw: $max-viewport) {
	$responsive-calc: calc(#{px-calc($min-font-size)} + (#{strip-unit(px-calc($max-font-size))} - #{strip-unit(px-calc($min-font-size))}) * (100vw - #{px-calc($min-vw)}) / (#{strip-unit(px-calc($max-vw))} - #{strip-unit(px-calc($min-vw))}));

  font-size: $min-font-size;
   // Min width
  @media screen and (min-width: $min-vw) {
    font-size: $responsive-calc;
  }

  // Max width
  @media screen and (min-width: $max-vw) {
    font-size: $max-font-size;
  }
}

// This makes padding and line height responsive

//   line-height:  calc(28px + (38 - 28) * (100vw - 600px) / (1200 - 600));
 
//   padding: calc(20px + (40 - 20) * (100vw - 600px) / (1200 - 600));

// @media (max-width: 600px) { 
//   p {
//     padding: 20px;
//     font-size: 24px;
//     line-height: 28px;
    
//   }
// }
// @media (min-width: 1200px) { 
//   p {
//     padding: 40px;
//     font-size: 34px;
//     line-height: 38px;
    
//   }
// }

/*================================================
			Misc
==================================================*/
@mixin appearance($none) {
	-webkit-appearance: $none;
	-moz-appearance: $none;
	appearance: $none;
}

@mixin transform-transition($trans-ition){
  -moz-transition: -moz-transform ($trans-ition);
  -ms-transition: -ms-transform ($trans-ition);
  -webkit-transition: -webkit-transform ($trans-ition);
  -o-transition: -o-transform ($trans-ition);
  transition: transform ($trans-ition);
}
